Mirror one git repo into another one
====================================

Trivial script to sync branches from one remote git repo into another;  with
intermediary cache directory (recycled for subsequent, e.g. cron, runs).

For example, consider you want to synchronize 'source.git' repo with
'destination.git'; and you want to sync 'master' -> 'master' and 'master' ->
'ci', while the 'destination.git:ci' branch has some more commits -- not tracked
in 'source.git:ci'.  Then you would do:

    $ git-mirror \
        --source https://example.com/source.git \
        --destination git@example.com:destination.git \
        --cache-dir /tmp/cache-directory \
        --branch master \
        --branch master:ci:merge

Obviously, the 'destination.git:ci' will either contain "merge commits", or the
synchronization fails if the 'ci' branches collide.

The script is designed so it can be easily executed by cron, like:

    $ crontab -l
    0,30  *  *  *  *  git-mirror ... --cache-dir /tmp/cache-dir-1
    0,30  *  *  *  *  git-mirror ... --cache-dir /tmp/cache-dir-2


For more info, check the --help output.
